pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '2.2.402'

- task: UseNode@1
  inputs:
    version: '12.7.0'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'TrekkingForCharity'
    organization: 'trekking-for-charity'
    scannerMode: 'MSBuild'
    projectKey: 'TrekkingForCharity'
    extraProperties: |
     sonar.cs.opencover.reportsPaths=**/results.opencover.xml

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './source/TrekkingForCharity.Web'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: './TrekkingForCharity.sln'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: './TrekkingForCharity.sln'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: './source/TrekkingForCharity.Web'
    customCommand: 'run release:build'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'tests/TrekkingForCharity.Tests/TrekkingForCharity.Tests.csproj'
    arguments: '--logger "xunit;LogFilePath=./results.xunit.xml" --configuration Release /property:CollectCoverage=True /property:CoverletOutputFormat=\"opencover,cobertura\" /property:CoverletOutput="./"'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'Heroku'
    repository: 'https://registry.heroku.com/trekkingforcharity-org/web'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'