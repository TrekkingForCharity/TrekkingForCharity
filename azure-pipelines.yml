pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '2.2.402'

- task: UseNode@1
  inputs:
    version: '12.7.0'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'TrekkingForCharity'
    organization: 'trekking-for-charity'
    scannerMode: 'MSBuild'
    projectKey: 'TrekkingForCharity'
    extraProperties: |
     sonar.cs.opencover.reportsPaths=**/results.opencover.xml

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: './source/TrekkingForCharity.Web'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: './source/TrekkingForCharity.Web'
    customCommand: 'run release:build'

- task: Bash@3
  inputs:
    filePath: './build/build.sh'
    arguments: '--bootstrap'
    workingDirectory: './build'

- task: Bash@3
  inputs:
    filePath: './build/build.sh'
    arguments: '--verbosity=diagnostic --target=Pipelines'
    workingDirectory: './build'

- task: PublishTestResults@2
  displayName: 'Publish Test Results coverage/xunit-report.xml'
  inputs:
    testResultsFormat: XUnit
    testResultsFiles: 'build/build-artifacts/cover/results.xunit.xml'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage from coverage/cobertura-coverage.xml'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: 'build/build-artifacts/cover/results.cobertura.xml'

- task: SonarCloudAnalyze@1
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'Heroku'
    repository: 'https://registry.heroku.com/trekkingforcharity-org/web'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'